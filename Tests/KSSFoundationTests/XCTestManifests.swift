#if !canImport(ObjectiveC)
import XCTest

extension ArrayExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArrayExtensionTests = [
        ("testAreAllEqual", testAreAllEqual),
        ("testCountMatches", testCountMatches),
        ("testInsertInSorted", testInsertInSorted),
        ("testInsertInSortedBy", testInsertInSortedBy),
        ("testRemove", testRemove),
    ]
}

extension AutoCounterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AutoCounterTests = [
        ("testBasicUsage", testBasicUsage),
    ]
}

extension DataExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DataExtensionTests = [
        ("testInitFromInputStream", testInitFromInputStream),
    ]
}

extension DateExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DateExtensionTests = [
        ("testDescriptionInTimeZone", testDescriptionInTimeZone),
    ]
}

extension DurationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DurationTests = [
        ("testCalendarBasedDuration", testCalendarBasedDuration),
        ("testMultiples", testMultiples),
        ("testUnitaryValues", testUnitaryValues),
    ]
}

extension FileManagerExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileManagerExtensionTests = [
        ("testCreateTemporaryDirectory", testCreateTemporaryDirectory),
        ("testDirectoryExists", testDirectoryExists),
    ]
}

extension FileSystemWatcherTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileSystemWatcherTests = [
        ("testInvalidWatches", testInvalidWatches),
        ("testManually", testManually),
        ("testMultipleWatchers", testMultipleWatchers),
        ("testThatFileChangesAreObserved", testThatFileChangesAreObserved),
        ("testThatFileCreationIsObserved", testThatFileCreationIsObserved),
        ("testThatFileDeletionIsObserved", testThatFileDeletionIsObserved),
        ("testThatRootDirectoryIsNotObserved", testThatRootDirectoryIsNotObserved),
        ("testThatRootDirectoryIsObserved", testThatRootDirectoryIsObserved),
        ("testThatWeCanIgnoreOurOwnEvents", testThatWeCanIgnoreOurOwnEvents),
    ]
}

extension JSONSerializationExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONSerializationExtensionTests = [
        ("testInAnArray", testInAnArray),
        ("testInAnObject", testInAnObject),
        ("testStruct", testStruct),
        ("testSubclass", testSubclass),
        ("testThrows", testThrows),
    ]
}

extension NSTextCheckingResultExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NSTextCheckingResultExtensionTests = [
        ("testCapture", testCapture),
        ("testCaptureWithPartialMatch", testCaptureWithPartialMatch),
    ]
}

extension StringExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringExtensionTests = [
        ("testAppend", testAppend),
        ("testAppendLine", testAppendLine),
        ("testInitFromContentsOfStream", testInitFromContentsOfStream),
        ("testPrettyPrint", testPrettyPrint),
        ("testRange", testRange),
    ]
}

extension UserDefaultsExtension {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UserDefaultsExtension = [
        ("testThatSettingInitialValuePutsItThere", testThatSettingInitialValuePutsItThere),
        ("testThatSettingInitialValuesHasNoEffectOnExistingOnes", testThatSettingInitialValuesHasNoEffectOnExistingOnes),
    ]
}

extension castTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__castTests = [
        ("testCastTo", testCastTo),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ArrayExtensionTests.__allTests__ArrayExtensionTests),
        testCase(AutoCounterTests.__allTests__AutoCounterTests),
        testCase(DataExtensionTests.__allTests__DataExtensionTests),
        testCase(DateExtensionTests.__allTests__DateExtensionTests),
        testCase(DurationTests.__allTests__DurationTests),
        testCase(FileManagerExtensionTests.__allTests__FileManagerExtensionTests),
        testCase(FileSystemWatcherTests.__allTests__FileSystemWatcherTests),
        testCase(JSONSerializationExtensionTests.__allTests__JSONSerializationExtensionTests),
        testCase(NSTextCheckingResultExtensionTests.__allTests__NSTextCheckingResultExtensionTests),
        testCase(StringExtensionTests.__allTests__StringExtensionTests),
        testCase(UserDefaultsExtension.__allTests__UserDefaultsExtension),
        testCase(castTests.__allTests__castTests),
    ]
}
#endif
