#!/bin/sh

#  buildversion.sh
#  RangeMap
#
#  Created by Steven W. Klassen on 2019-03-08.
#  Copyright Â© 2019 Klassen Software Solutions. All rights reserved.

if [ ! -f ../LICENSE ]; then
    echo "This needs to be run in a subdirectory of the one containing the LICENSE file."
    exit 1
fi

if [ ! -f Info.plist ]; then
    echo "This needs to be run in a directory containing the Info.plist file."
    exit 1
fi

if [ ! -d Model ]; then
    echo "This requires a directory called Model."
    exit 1
fi

trim() {
    awk '{$1=$1};1'
}

# See if the version has changed.
version=`git describe --tags --dirty=M 2>/dev/null | trim`
currentVersion=`/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" ./Info.plist | trim`
outputFile="Model/Versioning.swift"
echo "Version=${version}"
echo "Current Version=${currentVersion}"

if [ "${version}" != "${currentVersion}" ] || [ ! -f $outputFile ]; then
    # Generate the Versioning.swift file.
    echo "!! Version has changed, updating..."

    copyright=`/usr/libexec/PlistBuddy -c "Print NSHumanReadableCopyright" ./Info.plist | trim`
    license=`cat ../LICENSE | trim`

    echo "// Code generated by buildversion.sh; DO NOT EDIT." > $outputFile
    echo "" >> $outputFile
    echo "import Foundation" >> $outputFile
    echo "" >> $outputFile
    echo "/**" >> $outputFile
    echo " Versioning provides details of the application version number and license." >> $outputFile
    echo " */" >> $outputFile
    echo "public class Versioning {" >> $outputFile
    echo "    /**" >> $outputFile
    echo "     The current version number." >> $outputFile
    echo "     */" >> $outputFile
    echo "    public static let version = \"${version}\"" >> $outputFile
    echo "" >> $outputFile
    echo "    /**" >> $outputFile
    echo "     The copyright information." >> $outputFile
    echo "     */" >> $outputFile
    echo "    public static let copyright = \"${copyright}\"" >> $outputFile
    echo "" >> $outputFile
    echo "    /**" >> $outputFile
    echo "     The license text." >> $outputFile
    echo "     */" >> $outputFile
    echo "    public static let license = \"\"\"" >> $outputFile
    echo "${license}" >> $outputFile
    echo "\"\"\"" >> $outputFile
    echo "" >> $outputFile
    echo "    /*!" >> $outputFile
    echo "     Returns true if this is a version that is under active development. This is" >> $outputFile
    echo "     determined by examining the version number and seeing if it matches the " >> $outputFile
    echo "     format MAJOR.MINOR.PATCH that is used for all releases." >> $outputFile
    echo "     */" >> $outputFile
    echo "    static func isDevelopmentVersion() -> Bool {" >> $outputFile
    echo "        let r = version.range(of: \"^[0-9]+\\\\\.[0-9]+\\\\\.[0-9]$\", options: .regularExpression)" >> $outputFile
    echo "        return (r == nil)" >> $outputFile
    echo "    }" >> $outputFile
    echo "}" >> $outputFile

    # Update the Info.plist file.
    currentBuild=`/usr/libexec/PlistBuddy -c "Print CFBundleVersion" ./Info.plist | trim`
    currentBuild=$(($currentBuild + 1))
    /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${currentBuild}" ./Info.plist
    /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${version}" ./Info.plist
else
    echo "Version has not changed"
fi
